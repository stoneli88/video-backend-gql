# source: http://localhost:4466/video
# timestamp: Fri Sep 07 2018 17:55:59 GMT+0800 (菲律宾标准时间)

type AggregateCategory {
  count: Int!
}

type AggregateCollections {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateVideo {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Category implements Node {
  id: ID!
  name: String!
  total_videos: String!
  cover_url: String!
}

"""A connection to a list of items."""
type CategoryConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CategoryEdge]!
  aggregate: AggregateCategory!
}

input CategoryCreateInput {
  name: String!
  total_videos: String
  cover_url: String
}

input CategoryCreateOneInput {
  create: CategoryCreateInput
  connect: CategoryWhereUniqueInput
}

"""An edge in a connection."""
type CategoryEdge {
  """The item at the end of the edge."""
  node: Category!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  total_videos_ASC
  total_videos_DESC
  cover_url_ASC
  cover_url_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CategoryPreviousValues {
  id: ID!
  name: String!
  total_videos: String!
  cover_url: String!
}

type CategorySubscriptionPayload {
  mutation: MutationType!
  node: Category
  updatedFields: [String!]
  previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CategorySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategorySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategorySubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CategoryWhereInput
}

input CategoryUpdateDataInput {
  name: String
  total_videos: String
  cover_url: String
}

input CategoryUpdateInput {
  name: String
  total_videos: String
  cover_url: String
}

input CategoryUpdateOneInput {
  create: CategoryCreateInput
  connect: CategoryWhereUniqueInput
  delete: Boolean
  update: CategoryUpdateDataInput
  upsert: CategoryUpsertNestedInput
}

input CategoryUpsertNestedInput {
  update: CategoryUpdateDataInput!
  create: CategoryCreateInput!
}

input CategoryWhereInput {
  """Logical AND on all given filters."""
  AND: [CategoryWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategoryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategoryWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  total_videos: String

  """All values that are not equal to given value."""
  total_videos_not: String

  """All values that are contained in given list."""
  total_videos_in: [String!]

  """All values that are not contained in given list."""
  total_videos_not_in: [String!]

  """All values less than the given value."""
  total_videos_lt: String

  """All values less than or equal the given value."""
  total_videos_lte: String

  """All values greater than the given value."""
  total_videos_gt: String

  """All values greater than or equal the given value."""
  total_videos_gte: String

  """All values containing the given string."""
  total_videos_contains: String

  """All values not containing the given string."""
  total_videos_not_contains: String

  """All values starting with the given string."""
  total_videos_starts_with: String

  """All values not starting with the given string."""
  total_videos_not_starts_with: String

  """All values ending with the given string."""
  total_videos_ends_with: String

  """All values not ending with the given string."""
  total_videos_not_ends_with: String
  cover_url: String

  """All values that are not equal to given value."""
  cover_url_not: String

  """All values that are contained in given list."""
  cover_url_in: [String!]

  """All values that are not contained in given list."""
  cover_url_not_in: [String!]

  """All values less than the given value."""
  cover_url_lt: String

  """All values less than or equal the given value."""
  cover_url_lte: String

  """All values greater than the given value."""
  cover_url_gt: String

  """All values greater than or equal the given value."""
  cover_url_gte: String

  """All values containing the given string."""
  cover_url_contains: String

  """All values not containing the given string."""
  cover_url_not_contains: String

  """All values starting with the given string."""
  cover_url_starts_with: String

  """All values not starting with the given string."""
  cover_url_not_starts_with: String

  """All values ending with the given string."""
  cover_url_ends_with: String

  """All values not ending with the given string."""
  cover_url_not_ends_with: String
}

input CategoryWhereUniqueInput {
  id: ID
  name: String
}

type Collections implements Node {
  id: ID!
  title: String!
  keyword: String!
  cover_url: String!
  total_views: String!
  video_count: String!
  collection_url: String!
}

"""A connection to a list of items."""
type CollectionsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CollectionsEdge]!
  aggregate: AggregateCollections!
}

input CollectionsCreateInput {
  title: String!
  keyword: String
  cover_url: String
  total_views: String
  video_count: String
  collection_url: String
}

"""An edge in a connection."""
type CollectionsEdge {
  """The item at the end of the edge."""
  node: Collections!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CollectionsOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  keyword_ASC
  keyword_DESC
  cover_url_ASC
  cover_url_DESC
  total_views_ASC
  total_views_DESC
  video_count_ASC
  video_count_DESC
  collection_url_ASC
  collection_url_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CollectionsPreviousValues {
  id: ID!
  title: String!
  keyword: String!
  cover_url: String!
  total_views: String!
  video_count: String!
  collection_url: String!
}

type CollectionsSubscriptionPayload {
  mutation: MutationType!
  node: Collections
  updatedFields: [String!]
  previousValues: CollectionsPreviousValues
}

input CollectionsSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CollectionsSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CollectionsSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CollectionsSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CollectionsWhereInput
}

input CollectionsUpdateInput {
  title: String
  keyword: String
  cover_url: String
  total_views: String
  video_count: String
  collection_url: String
}

input CollectionsWhereInput {
  """Logical AND on all given filters."""
  AND: [CollectionsWhereInput!]

  """Logical OR on all given filters."""
  OR: [CollectionsWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CollectionsWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  keyword: String

  """All values that are not equal to given value."""
  keyword_not: String

  """All values that are contained in given list."""
  keyword_in: [String!]

  """All values that are not contained in given list."""
  keyword_not_in: [String!]

  """All values less than the given value."""
  keyword_lt: String

  """All values less than or equal the given value."""
  keyword_lte: String

  """All values greater than the given value."""
  keyword_gt: String

  """All values greater than or equal the given value."""
  keyword_gte: String

  """All values containing the given string."""
  keyword_contains: String

  """All values not containing the given string."""
  keyword_not_contains: String

  """All values starting with the given string."""
  keyword_starts_with: String

  """All values not starting with the given string."""
  keyword_not_starts_with: String

  """All values ending with the given string."""
  keyword_ends_with: String

  """All values not ending with the given string."""
  keyword_not_ends_with: String
  cover_url: String

  """All values that are not equal to given value."""
  cover_url_not: String

  """All values that are contained in given list."""
  cover_url_in: [String!]

  """All values that are not contained in given list."""
  cover_url_not_in: [String!]

  """All values less than the given value."""
  cover_url_lt: String

  """All values less than or equal the given value."""
  cover_url_lte: String

  """All values greater than the given value."""
  cover_url_gt: String

  """All values greater than or equal the given value."""
  cover_url_gte: String

  """All values containing the given string."""
  cover_url_contains: String

  """All values not containing the given string."""
  cover_url_not_contains: String

  """All values starting with the given string."""
  cover_url_starts_with: String

  """All values not starting with the given string."""
  cover_url_not_starts_with: String

  """All values ending with the given string."""
  cover_url_ends_with: String

  """All values not ending with the given string."""
  cover_url_not_ends_with: String
  total_views: String

  """All values that are not equal to given value."""
  total_views_not: String

  """All values that are contained in given list."""
  total_views_in: [String!]

  """All values that are not contained in given list."""
  total_views_not_in: [String!]

  """All values less than the given value."""
  total_views_lt: String

  """All values less than or equal the given value."""
  total_views_lte: String

  """All values greater than the given value."""
  total_views_gt: String

  """All values greater than or equal the given value."""
  total_views_gte: String

  """All values containing the given string."""
  total_views_contains: String

  """All values not containing the given string."""
  total_views_not_contains: String

  """All values starting with the given string."""
  total_views_starts_with: String

  """All values not starting with the given string."""
  total_views_not_starts_with: String

  """All values ending with the given string."""
  total_views_ends_with: String

  """All values not ending with the given string."""
  total_views_not_ends_with: String
  video_count: String

  """All values that are not equal to given value."""
  video_count_not: String

  """All values that are contained in given list."""
  video_count_in: [String!]

  """All values that are not contained in given list."""
  video_count_not_in: [String!]

  """All values less than the given value."""
  video_count_lt: String

  """All values less than or equal the given value."""
  video_count_lte: String

  """All values greater than the given value."""
  video_count_gt: String

  """All values greater than or equal the given value."""
  video_count_gte: String

  """All values containing the given string."""
  video_count_contains: String

  """All values not containing the given string."""
  video_count_not_contains: String

  """All values starting with the given string."""
  video_count_starts_with: String

  """All values not starting with the given string."""
  video_count_not_starts_with: String

  """All values ending with the given string."""
  video_count_ends_with: String

  """All values not ending with the given string."""
  video_count_not_ends_with: String
  collection_url: String

  """All values that are not equal to given value."""
  collection_url_not: String

  """All values that are contained in given list."""
  collection_url_in: [String!]

  """All values that are not contained in given list."""
  collection_url_not_in: [String!]

  """All values less than the given value."""
  collection_url_lt: String

  """All values less than or equal the given value."""
  collection_url_lte: String

  """All values greater than the given value."""
  collection_url_gt: String

  """All values greater than or equal the given value."""
  collection_url_gte: String

  """All values containing the given string."""
  collection_url_contains: String

  """All values not containing the given string."""
  collection_url_not_contains: String

  """All values starting with the given string."""
  collection_url_starts_with: String

  """All values not starting with the given string."""
  collection_url_not_starts_with: String

  """All values ending with the given string."""
  collection_url_ends_with: String

  """All values not ending with the given string."""
  collection_url_not_ends_with: String
}

input CollectionsWhereUniqueInput {
  id: ID
  title: String
}

scalar DateTime

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createCollections(data: CollectionsCreateInput!): Collections!
  createVideo(data: VideoCreateInput!): Video!
  createCategory(data: CategoryCreateInput!): Category!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateCollections(data: CollectionsUpdateInput!, where: CollectionsWhereUniqueInput!): Collections
  updateVideo(data: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  deleteUser(where: UserWhereUniqueInput!): User
  deleteCollections(where: CollectionsWhereUniqueInput!): Collections
  deleteVideo(where: VideoWhereUniqueInput!): Video
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertCollections(where: CollectionsWhereUniqueInput!, create: CollectionsCreateInput!, update: CollectionsUpdateInput!): Collections!
  upsertVideo(where: VideoWhereUniqueInput!, create: VideoCreateInput!, update: VideoUpdateInput!): Video!
  upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  updateManyCollectionses(data: CollectionsUpdateInput!, where: CollectionsWhereInput): BatchPayload!
  updateManyVideos(data: VideoUpdateInput!, where: VideoWhereInput): BatchPayload!
  updateManyCategories(data: CategoryUpdateInput!, where: CategoryWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyCollectionses(where: CollectionsWhereInput): BatchPayload!
  deleteManyVideos(where: VideoWhereInput): BatchPayload!
  deleteManyCategories(where: CategoryWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  collectionses(where: CollectionsWhereInput, orderBy: CollectionsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Collections]!
  videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video]!
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!
  user(where: UserWhereUniqueInput!): User
  collections(where: CollectionsWhereUniqueInput!): Collections
  video(where: VideoWhereUniqueInput!): Video
  category(where: CategoryWhereUniqueInput!): Category
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  collectionsesConnection(where: CollectionsWhereInput, orderBy: CollectionsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CollectionsConnection!
  videosConnection(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoConnection!
  categoriesConnection(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  collections(where: CollectionsSubscriptionWhereInput): CollectionsSubscriptionPayload
  video(where: VideoSubscriptionWhereInput): VideoSubscriptionPayload
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
}

type User implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  password: String!
  name: String!
  video(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  email: String!
  password: String!
  name: String!
  video: VideoCreateManyWithoutOwnerInput
}

input UserCreateOneWithoutVideoInput {
  create: UserCreateWithoutVideoInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutVideoInput {
  email: String!
  password: String!
  name: String!
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  name_ASC
  name_DESC
}

type UserPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  password: String!
  name: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  email: String
  password: String
  name: String
  video: VideoUpdateManyWithoutOwnerInput
}

input UserUpdateOneWithoutVideoInput {
  create: UserCreateWithoutVideoInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutVideoDataInput
  upsert: UserUpsertWithoutVideoInput
}

input UserUpdateWithoutVideoDataInput {
  email: String
  password: String
  name: String
}

input UserUpsertWithoutVideoInput {
  update: UserUpdateWithoutVideoDataInput!
  create: UserCreateWithoutVideoInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  video_every: VideoWhereInput
  video_some: VideoWhereInput
  video_none: VideoWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

type Video implements Node {
  id: ID!
  mov_uuid: String!
  cover_uuid: String!
  mov_name: String!
  cover_name: String!
  name: String!
  description: String!
  channel: String!
  duration: String!
  framerate: String!
  hd: Boolean!
  keyword: String!
  mov_url: String!
  cover_url: String!
  viewnumber: String!
  likes: String!
  dislikes: String!
  preview_url: String!
  category(where: CategoryWhereInput): Category!
  owner(where: UserWhereInput): User!
  isEncoded: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type VideoConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VideoEdge]!
  aggregate: AggregateVideo!
}

input VideoCreateInput {
  mov_uuid: String
  cover_uuid: String
  mov_name: String
  cover_name: String
  name: String!
  description: String!
  channel: String
  duration: String
  framerate: String
  hd: Boolean
  keyword: String
  mov_url: String
  cover_url: String
  viewnumber: String
  likes: String
  dislikes: String
  preview_url: String
  isEncoded: String
  category: CategoryCreateOneInput!
  owner: UserCreateOneWithoutVideoInput!
}

input VideoCreateManyWithoutOwnerInput {
  create: [VideoCreateWithoutOwnerInput!]
  connect: [VideoWhereUniqueInput!]
}

input VideoCreateWithoutOwnerInput {
  mov_uuid: String
  cover_uuid: String
  mov_name: String
  cover_name: String
  name: String!
  description: String!
  channel: String
  duration: String
  framerate: String
  hd: Boolean
  keyword: String
  mov_url: String
  cover_url: String
  viewnumber: String
  likes: String
  dislikes: String
  preview_url: String
  isEncoded: String
  category: CategoryCreateOneInput!
}

"""An edge in a connection."""
type VideoEdge {
  """The item at the end of the edge."""
  node: Video!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VideoOrderByInput {
  id_ASC
  id_DESC
  mov_uuid_ASC
  mov_uuid_DESC
  cover_uuid_ASC
  cover_uuid_DESC
  mov_name_ASC
  mov_name_DESC
  cover_name_ASC
  cover_name_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  channel_ASC
  channel_DESC
  duration_ASC
  duration_DESC
  framerate_ASC
  framerate_DESC
  hd_ASC
  hd_DESC
  keyword_ASC
  keyword_DESC
  mov_url_ASC
  mov_url_DESC
  cover_url_ASC
  cover_url_DESC
  viewnumber_ASC
  viewnumber_DESC
  likes_ASC
  likes_DESC
  dislikes_ASC
  dislikes_DESC
  preview_url_ASC
  preview_url_DESC
  isEncoded_ASC
  isEncoded_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type VideoPreviousValues {
  id: ID!
  mov_uuid: String!
  cover_uuid: String!
  mov_name: String!
  cover_name: String!
  name: String!
  description: String!
  channel: String!
  duration: String!
  framerate: String!
  hd: Boolean!
  keyword: String!
  mov_url: String!
  cover_url: String!
  viewnumber: String!
  likes: String!
  dislikes: String!
  preview_url: String!
  isEncoded: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type VideoSubscriptionPayload {
  mutation: MutationType!
  node: Video
  updatedFields: [String!]
  previousValues: VideoPreviousValues
}

input VideoSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VideoWhereInput
}

input VideoUpdateInput {
  mov_uuid: String
  cover_uuid: String
  mov_name: String
  cover_name: String
  name: String
  description: String
  channel: String
  duration: String
  framerate: String
  hd: Boolean
  keyword: String
  mov_url: String
  cover_url: String
  viewnumber: String
  likes: String
  dislikes: String
  preview_url: String
  isEncoded: String
  category: CategoryUpdateOneInput
  owner: UserUpdateOneWithoutVideoInput
}

input VideoUpdateManyWithoutOwnerInput {
  create: [VideoCreateWithoutOwnerInput!]
  connect: [VideoWhereUniqueInput!]
  disconnect: [VideoWhereUniqueInput!]
  delete: [VideoWhereUniqueInput!]
  update: [VideoUpdateWithWhereUniqueWithoutOwnerInput!]
  upsert: [VideoUpsertWithWhereUniqueWithoutOwnerInput!]
}

input VideoUpdateWithoutOwnerDataInput {
  mov_uuid: String
  cover_uuid: String
  mov_name: String
  cover_name: String
  name: String
  description: String
  channel: String
  duration: String
  framerate: String
  hd: Boolean
  keyword: String
  mov_url: String
  cover_url: String
  viewnumber: String
  likes: String
  dislikes: String
  preview_url: String
  isEncoded: String
  category: CategoryUpdateOneInput
}

input VideoUpdateWithWhereUniqueWithoutOwnerInput {
  where: VideoWhereUniqueInput!
  data: VideoUpdateWithoutOwnerDataInput!
}

input VideoUpsertWithWhereUniqueWithoutOwnerInput {
  where: VideoWhereUniqueInput!
  update: VideoUpdateWithoutOwnerDataInput!
  create: VideoCreateWithoutOwnerInput!
}

input VideoWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  mov_uuid: String

  """All values that are not equal to given value."""
  mov_uuid_not: String

  """All values that are contained in given list."""
  mov_uuid_in: [String!]

  """All values that are not contained in given list."""
  mov_uuid_not_in: [String!]

  """All values less than the given value."""
  mov_uuid_lt: String

  """All values less than or equal the given value."""
  mov_uuid_lte: String

  """All values greater than the given value."""
  mov_uuid_gt: String

  """All values greater than or equal the given value."""
  mov_uuid_gte: String

  """All values containing the given string."""
  mov_uuid_contains: String

  """All values not containing the given string."""
  mov_uuid_not_contains: String

  """All values starting with the given string."""
  mov_uuid_starts_with: String

  """All values not starting with the given string."""
  mov_uuid_not_starts_with: String

  """All values ending with the given string."""
  mov_uuid_ends_with: String

  """All values not ending with the given string."""
  mov_uuid_not_ends_with: String
  cover_uuid: String

  """All values that are not equal to given value."""
  cover_uuid_not: String

  """All values that are contained in given list."""
  cover_uuid_in: [String!]

  """All values that are not contained in given list."""
  cover_uuid_not_in: [String!]

  """All values less than the given value."""
  cover_uuid_lt: String

  """All values less than or equal the given value."""
  cover_uuid_lte: String

  """All values greater than the given value."""
  cover_uuid_gt: String

  """All values greater than or equal the given value."""
  cover_uuid_gte: String

  """All values containing the given string."""
  cover_uuid_contains: String

  """All values not containing the given string."""
  cover_uuid_not_contains: String

  """All values starting with the given string."""
  cover_uuid_starts_with: String

  """All values not starting with the given string."""
  cover_uuid_not_starts_with: String

  """All values ending with the given string."""
  cover_uuid_ends_with: String

  """All values not ending with the given string."""
  cover_uuid_not_ends_with: String
  mov_name: String

  """All values that are not equal to given value."""
  mov_name_not: String

  """All values that are contained in given list."""
  mov_name_in: [String!]

  """All values that are not contained in given list."""
  mov_name_not_in: [String!]

  """All values less than the given value."""
  mov_name_lt: String

  """All values less than or equal the given value."""
  mov_name_lte: String

  """All values greater than the given value."""
  mov_name_gt: String

  """All values greater than or equal the given value."""
  mov_name_gte: String

  """All values containing the given string."""
  mov_name_contains: String

  """All values not containing the given string."""
  mov_name_not_contains: String

  """All values starting with the given string."""
  mov_name_starts_with: String

  """All values not starting with the given string."""
  mov_name_not_starts_with: String

  """All values ending with the given string."""
  mov_name_ends_with: String

  """All values not ending with the given string."""
  mov_name_not_ends_with: String
  cover_name: String

  """All values that are not equal to given value."""
  cover_name_not: String

  """All values that are contained in given list."""
  cover_name_in: [String!]

  """All values that are not contained in given list."""
  cover_name_not_in: [String!]

  """All values less than the given value."""
  cover_name_lt: String

  """All values less than or equal the given value."""
  cover_name_lte: String

  """All values greater than the given value."""
  cover_name_gt: String

  """All values greater than or equal the given value."""
  cover_name_gte: String

  """All values containing the given string."""
  cover_name_contains: String

  """All values not containing the given string."""
  cover_name_not_contains: String

  """All values starting with the given string."""
  cover_name_starts_with: String

  """All values not starting with the given string."""
  cover_name_not_starts_with: String

  """All values ending with the given string."""
  cover_name_ends_with: String

  """All values not ending with the given string."""
  cover_name_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  channel: String

  """All values that are not equal to given value."""
  channel_not: String

  """All values that are contained in given list."""
  channel_in: [String!]

  """All values that are not contained in given list."""
  channel_not_in: [String!]

  """All values less than the given value."""
  channel_lt: String

  """All values less than or equal the given value."""
  channel_lte: String

  """All values greater than the given value."""
  channel_gt: String

  """All values greater than or equal the given value."""
  channel_gte: String

  """All values containing the given string."""
  channel_contains: String

  """All values not containing the given string."""
  channel_not_contains: String

  """All values starting with the given string."""
  channel_starts_with: String

  """All values not starting with the given string."""
  channel_not_starts_with: String

  """All values ending with the given string."""
  channel_ends_with: String

  """All values not ending with the given string."""
  channel_not_ends_with: String
  duration: String

  """All values that are not equal to given value."""
  duration_not: String

  """All values that are contained in given list."""
  duration_in: [String!]

  """All values that are not contained in given list."""
  duration_not_in: [String!]

  """All values less than the given value."""
  duration_lt: String

  """All values less than or equal the given value."""
  duration_lte: String

  """All values greater than the given value."""
  duration_gt: String

  """All values greater than or equal the given value."""
  duration_gte: String

  """All values containing the given string."""
  duration_contains: String

  """All values not containing the given string."""
  duration_not_contains: String

  """All values starting with the given string."""
  duration_starts_with: String

  """All values not starting with the given string."""
  duration_not_starts_with: String

  """All values ending with the given string."""
  duration_ends_with: String

  """All values not ending with the given string."""
  duration_not_ends_with: String
  framerate: String

  """All values that are not equal to given value."""
  framerate_not: String

  """All values that are contained in given list."""
  framerate_in: [String!]

  """All values that are not contained in given list."""
  framerate_not_in: [String!]

  """All values less than the given value."""
  framerate_lt: String

  """All values less than or equal the given value."""
  framerate_lte: String

  """All values greater than the given value."""
  framerate_gt: String

  """All values greater than or equal the given value."""
  framerate_gte: String

  """All values containing the given string."""
  framerate_contains: String

  """All values not containing the given string."""
  framerate_not_contains: String

  """All values starting with the given string."""
  framerate_starts_with: String

  """All values not starting with the given string."""
  framerate_not_starts_with: String

  """All values ending with the given string."""
  framerate_ends_with: String

  """All values not ending with the given string."""
  framerate_not_ends_with: String
  hd: Boolean

  """All values that are not equal to given value."""
  hd_not: Boolean
  keyword: String

  """All values that are not equal to given value."""
  keyword_not: String

  """All values that are contained in given list."""
  keyword_in: [String!]

  """All values that are not contained in given list."""
  keyword_not_in: [String!]

  """All values less than the given value."""
  keyword_lt: String

  """All values less than or equal the given value."""
  keyword_lte: String

  """All values greater than the given value."""
  keyword_gt: String

  """All values greater than or equal the given value."""
  keyword_gte: String

  """All values containing the given string."""
  keyword_contains: String

  """All values not containing the given string."""
  keyword_not_contains: String

  """All values starting with the given string."""
  keyword_starts_with: String

  """All values not starting with the given string."""
  keyword_not_starts_with: String

  """All values ending with the given string."""
  keyword_ends_with: String

  """All values not ending with the given string."""
  keyword_not_ends_with: String
  mov_url: String

  """All values that are not equal to given value."""
  mov_url_not: String

  """All values that are contained in given list."""
  mov_url_in: [String!]

  """All values that are not contained in given list."""
  mov_url_not_in: [String!]

  """All values less than the given value."""
  mov_url_lt: String

  """All values less than or equal the given value."""
  mov_url_lte: String

  """All values greater than the given value."""
  mov_url_gt: String

  """All values greater than or equal the given value."""
  mov_url_gte: String

  """All values containing the given string."""
  mov_url_contains: String

  """All values not containing the given string."""
  mov_url_not_contains: String

  """All values starting with the given string."""
  mov_url_starts_with: String

  """All values not starting with the given string."""
  mov_url_not_starts_with: String

  """All values ending with the given string."""
  mov_url_ends_with: String

  """All values not ending with the given string."""
  mov_url_not_ends_with: String
  cover_url: String

  """All values that are not equal to given value."""
  cover_url_not: String

  """All values that are contained in given list."""
  cover_url_in: [String!]

  """All values that are not contained in given list."""
  cover_url_not_in: [String!]

  """All values less than the given value."""
  cover_url_lt: String

  """All values less than or equal the given value."""
  cover_url_lte: String

  """All values greater than the given value."""
  cover_url_gt: String

  """All values greater than or equal the given value."""
  cover_url_gte: String

  """All values containing the given string."""
  cover_url_contains: String

  """All values not containing the given string."""
  cover_url_not_contains: String

  """All values starting with the given string."""
  cover_url_starts_with: String

  """All values not starting with the given string."""
  cover_url_not_starts_with: String

  """All values ending with the given string."""
  cover_url_ends_with: String

  """All values not ending with the given string."""
  cover_url_not_ends_with: String
  viewnumber: String

  """All values that are not equal to given value."""
  viewnumber_not: String

  """All values that are contained in given list."""
  viewnumber_in: [String!]

  """All values that are not contained in given list."""
  viewnumber_not_in: [String!]

  """All values less than the given value."""
  viewnumber_lt: String

  """All values less than or equal the given value."""
  viewnumber_lte: String

  """All values greater than the given value."""
  viewnumber_gt: String

  """All values greater than or equal the given value."""
  viewnumber_gte: String

  """All values containing the given string."""
  viewnumber_contains: String

  """All values not containing the given string."""
  viewnumber_not_contains: String

  """All values starting with the given string."""
  viewnumber_starts_with: String

  """All values not starting with the given string."""
  viewnumber_not_starts_with: String

  """All values ending with the given string."""
  viewnumber_ends_with: String

  """All values not ending with the given string."""
  viewnumber_not_ends_with: String
  likes: String

  """All values that are not equal to given value."""
  likes_not: String

  """All values that are contained in given list."""
  likes_in: [String!]

  """All values that are not contained in given list."""
  likes_not_in: [String!]

  """All values less than the given value."""
  likes_lt: String

  """All values less than or equal the given value."""
  likes_lte: String

  """All values greater than the given value."""
  likes_gt: String

  """All values greater than or equal the given value."""
  likes_gte: String

  """All values containing the given string."""
  likes_contains: String

  """All values not containing the given string."""
  likes_not_contains: String

  """All values starting with the given string."""
  likes_starts_with: String

  """All values not starting with the given string."""
  likes_not_starts_with: String

  """All values ending with the given string."""
  likes_ends_with: String

  """All values not ending with the given string."""
  likes_not_ends_with: String
  dislikes: String

  """All values that are not equal to given value."""
  dislikes_not: String

  """All values that are contained in given list."""
  dislikes_in: [String!]

  """All values that are not contained in given list."""
  dislikes_not_in: [String!]

  """All values less than the given value."""
  dislikes_lt: String

  """All values less than or equal the given value."""
  dislikes_lte: String

  """All values greater than the given value."""
  dislikes_gt: String

  """All values greater than or equal the given value."""
  dislikes_gte: String

  """All values containing the given string."""
  dislikes_contains: String

  """All values not containing the given string."""
  dislikes_not_contains: String

  """All values starting with the given string."""
  dislikes_starts_with: String

  """All values not starting with the given string."""
  dislikes_not_starts_with: String

  """All values ending with the given string."""
  dislikes_ends_with: String

  """All values not ending with the given string."""
  dislikes_not_ends_with: String
  preview_url: String

  """All values that are not equal to given value."""
  preview_url_not: String

  """All values that are contained in given list."""
  preview_url_in: [String!]

  """All values that are not contained in given list."""
  preview_url_not_in: [String!]

  """All values less than the given value."""
  preview_url_lt: String

  """All values less than or equal the given value."""
  preview_url_lte: String

  """All values greater than the given value."""
  preview_url_gt: String

  """All values greater than or equal the given value."""
  preview_url_gte: String

  """All values containing the given string."""
  preview_url_contains: String

  """All values not containing the given string."""
  preview_url_not_contains: String

  """All values starting with the given string."""
  preview_url_starts_with: String

  """All values not starting with the given string."""
  preview_url_not_starts_with: String

  """All values ending with the given string."""
  preview_url_ends_with: String

  """All values not ending with the given string."""
  preview_url_not_ends_with: String
  isEncoded: String

  """All values that are not equal to given value."""
  isEncoded_not: String

  """All values that are contained in given list."""
  isEncoded_in: [String!]

  """All values that are not contained in given list."""
  isEncoded_not_in: [String!]

  """All values less than the given value."""
  isEncoded_lt: String

  """All values less than or equal the given value."""
  isEncoded_lte: String

  """All values greater than the given value."""
  isEncoded_gt: String

  """All values greater than or equal the given value."""
  isEncoded_gte: String

  """All values containing the given string."""
  isEncoded_contains: String

  """All values not containing the given string."""
  isEncoded_not_contains: String

  """All values starting with the given string."""
  isEncoded_starts_with: String

  """All values not starting with the given string."""
  isEncoded_not_starts_with: String

  """All values ending with the given string."""
  isEncoded_ends_with: String

  """All values not ending with the given string."""
  isEncoded_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  category: CategoryWhereInput
  owner: UserWhereInput
}

input VideoWhereUniqueInput {
  id: ID
}
